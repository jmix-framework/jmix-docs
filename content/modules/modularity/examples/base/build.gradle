buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "io.jmix.gradle:jmix-gradle-plugin:1.3.0"
    }
}

group = 'features.sample'
version = '0.0.1-SNAPSHOT'

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'io.jmix'

    repositories {
        mavenCentral()
        maven {
        url 'https://global.repo.jmix.io/repository/public'
    }
    }

    jmix {
        bomVersion = '1.3.1'
        projectId = 'base'
    }

    group = this.group
    version = this.version

    def props = new Properties()
    buildFile.withInputStream { props.load(it) }
    def subArchivesBaseName = props.getProperty('archivesBaseName')
    def archName = subArchivesBaseName.substring(1, subArchivesBaseName.length() - 1)

    java {
        withSourcesJar()
    }

    artifacts {
        archives sourcesJar
    }

    publishing {
        repositories {
            maven {
                url = 'https://myrepo/releases/'
                credentials {
                    username rootProject.hasProperty('uploadUser') ? rootProject['uploadUser'] : 'admin'
                    password rootProject.hasProperty('uploadPassword') ? rootProject['uploadPassword'] : 'admin'
                }
                allowInsecureProtocol = true
            }
        }
        publications {
            javaMaven(MavenPublication) {
                artifactId = archName
                from components.java
            }
        }
    }

    // remove after https://youtrack.jetbrains.com/issue/IDEA-227215 is fixed
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
}
